/***
 * Forms:
 * <p>All forms fields are contained within a `fieldset`. Each field is defined within an ordered list item.</p>
 */

/**
 * Standard Form Fields:
 *
 *		@example
 *		<form action="#">
 *			<fieldset>
 *				<legend>Text Input</legend>
 *				<h3>Text Inputs</h3>
 *				<ol>
 *					<li>
 *						<label for="testinput">Label for the input</label>
 *						<input type="text" id="testinput" placeholder="Placeholder for the input">
 *					</li>
 *					<li>
 *						<label for="testtextarea">Label for the textarea</label>
 *						<textarea id="testtextarea" cols="30" rows="5" placeholder="Placeholder for the textarea"></textarea>
 *					</li>
 *				</ol>
 *			</fieldset>
 *			<fieldset>
 *				<legend>Selects, Radios, Checkboxes</legend>
 *				<h3>Selects, Radios, Checkboxes</h3>
 *				<ol>
 *					<li>
 *						<fieldset>
 *							<legend>Select one of the following:</legend>
 *							<ol>
 *								<li>
 *									<label for="options">Label for the radio options</label>
 *									<ol class="radio-list">
 *										<li>
 *											<input type="radio" name="options" id="radio-option-1" value="option 1">
 *											<label for="radio-option-1">Option 1</label>
 *										</li>
 *										<li>
 *											<input type="radio" name="options" id="radio-option-2" value="option 2">
 *											<label for="radio-option-2">Option 2</label>
 *										</li>
 *									</ol>
 *								</li>
 *							</ol>
 *						</fieldset>
 *					</li>
 *					<li>
 *						<fieldset>
 *							<legend>Select at least one of the following:</legend>
 *							<ol>
 *								<li>
 *									<label for="checkbox">Label for the checkbox</label>
 *									<ol class="checkbox-list">
 *										<li>
 *											<input type="checkbox" name="checkbox" id="checkbox-option-1" value="option 1">
 *											<label for="checkbox-option-1">Option 1</label>
 *										</li>
 *										<li>
 *											<input type="checkbox" name="checkbox" id="checkbox-option-2" value="option 2">
 *											<label for="checkbox-option-2">Option 2</label>
 *										</li>
 *									</ol>
 *								</li>
 *							</ol>
 *						</fieldset>
 *					</li>
 *					<li>
 *						<fieldset>
 *						<legend>Inline Checkboxes and Radio Buttons</legend>
 *						<h3>Inline Checkboxes and Radio Buttons</h3>
 *						<ol>
 *							<li>
 *								<label for="options">Label for the radio options</label>
 *								<ol class="radio-list">
 *									<li>
 *										<input type="radio" name="inline-options" id="inline-radio-option-1" value="option 1">
 *										<label for="inline-radio-option-1" class="inline">Option 1</label>
 *										<input type="radio" name="inline-options" id="inline-radio-option-2" value="option 2">
 *										<label for="inline-radio-option-2" class="inline">Option 2</label>
 *									</li>
 *								</ol>
 *							</li>
 *							<li>
 *								<label for="checkbox">Label for the checkbox</label>
 *								<ol class="checkbox-list">
 *									<li>
 *										<input type="checkbox" name="inline-checkbox" id="inline-checkbox-option-1" value="option 1">
 *										<label for="inline-checkbox-option-1" class="inline">Option 1</label>
 *										<input type="checkbox" name="inline-checkbox" id="inline-checkbox-option-2" value="option 2">
 *										<label for="inline-checkbox-option-2" class="inline">Option 2</label>
 *									</li>
 *								</ol>
 *							</li>
 *						</ol>
 *						</fieldset>
 *					</li>
 *				</ol>
 *			</fieldset>
 *		</form>
 *
 */

form {
	margin: 0;
}

// default styles, applied to all browsers
fieldset {
	border: none;
	margin: em(12) 0 0;
	padding: 0;

	&:first-child,
	&.flush {
		margin-top: 0;
	}

	legend {
		display: none;
	}

	ol {
		list-style-type: none;
		margin: 0;
		padding: 0;
	}

	li {
		margin-top: em(12);
		// ----- NOTE:  I am keeping this rule here temporarily for posterity; this has been fixed in iOS7 ------
		// overflow is set due to an iOS6 bug related to the usage of the placeholder attribute
		// http://stackoverflow.com/questions/12515058/ios6-safari-orientation-change-bug
		// overflow: hidden;

		&:first-child {
			margin-top: 0;
		}
	}

	label,
	label + select {
		display: block;
	}

	label.inline {
		display: inline-block;
		padding-right: 5px;
	}

	input[type="text"],
	input[type="number"],
	input[type="password"],
	input[type="email"],
	input[type="tel"] {
		// height is set explicitly in pixels to match the custom selects
		height: $inputHeight;
	}

	input[type="text"],
	input[type="number"],
	input[type="password"],
	input[type="email"],
	input[type="tel"],
	textarea {
		background-color: color(greyLight);
		border: 1px solid color(greyMedium);
		border-radius: $formElementBorderRadius;
		max-width: 100%;
		padding: em(8);
		@include placeholder-color(color(greyDark));
		width: 100%;
	}

	textarea {
		resize: vertical;
	}

	& + button {
		margin-top: em(12);
	}

	.radio-list,
	.checkbox-list {
		> li {
			margin: 0 0 0 em(12);
		}
	}

	.oldie & {
		input[type="radio"],
		input[type="checkbox"] {
			& + label {
				display: inline;
				margin-left: em(4);
				min-height: 20px;
			}
			& + span {
				margin-left: em(4);
				min-height: 20px;
			}
		}
	}
}

fieldset:not(#foo) {
	input[type="radio"],
	input[type="checkbox"] {
		float: left;
		height: 1px;
		margin: 0;
		opacity: 0;
		padding: 0;
		width: 1px;

		& + label {
			clear: none;
			display: block;
			padding: em(6) em(5) em(4) em(27);

			&::before {
				display: inline-block;
				margin-left: em(-26);
				margin-right: em(8);
				vertical-align: middle;
			}

			&.inline {
				display: inline-block;
			}
		}
	}

	input[type="radio"] {
		& + label {
			&::before {
				content: image('radio-unchecked.svg');
			}
		}
		&:focus + label {
			color: color(primary);
		}
		&:checked + label {
			&::before {
				content: image('radio-checked.svg');
			}
		}
	}

	input[type="checkbox"] {
		& + label {
			&::before {
				content: image('checkbox-unchecked.svg');
			}
		}
		&:focus + label {
			color: color(primary);
		}
		&:checked + label {
			&::before {
				content: image('checkbox-checked.svg');
			}
		}
	}
}

fieldset {
	label {
		&.inline {
			display: inline-block;
			padding-right: 5px;
		}
	}
}

/**
 * Selects:
 * `.decorator-select`
 * <p>Unless otherwise specified, selects are wrapped with a `<div class="decorator-select" />` on page load, via JavaScript. This allows for easy and consistent cross-browser customization.</p>
 *
 *		@example
 *		<div class="two-up">
 *			<select id="testselect">
 *				<option>First</option>
 *				<option>Second</option>
 *				<option>Third</option>
 *			</select>
 *		</div>
 *
 */
$decoratorSelectBorderSize: 1px;
$decoratorSelectHeight: $inputHeight - (2 * $decoratorSelectBorderSize);

%decorator-select {
	@include gradient(color(greyLight), color(greyMedium));
	border: $decoratorSelectBorderSize solid color(greyMedium);
	border-radius: $formElementBorderRadius;
	display: inline-block;
	width: 100%;

	select {
		-webkit-appearance: none;
		background: transparent;
		border: none;
		color: black;
		display: block;
		outline: none;
		padding: 6px 10px 6px 10px;
		position: relative;
		width: 100%;
	}
}

.decorator-select {
	@extend %decorator-select;
	position: relative;

	&:after {
		content: image('bg-select-arrow.png');
		height: $decoratorSelectHeight;	// the content image's height should fit within the confines of the input's height
		pointer-events: none;
		position: absolute;
		right: 0;
		top: 0;
	}

	select {
		height: $decoratorSelectHeight;
	}
}

/**
 * Multiple Selects:
 * `.decorator-select-multiple`
 * <p>Selects with the "multiple" attribute are wrapped with a `<div class="decorator-select-multiple" />`.</p>
 *
 *		@example
 *		<div class="two-up">
 *			<select id="testmultipleselect" multiple>
 *				<option>First</option>
 *				<option>Second</option>
 *				<option>Third</option>
 *			</select>
 *		</div>
 *
 */
.decorator-select-multiple {
	@extend %decorator-select;

	select {
		min-height: $decoratorSelectHeight;
	}
}

/**
 * Custom File Upload:
 * `.custom-file-upload`
 *
 *		@example
 *		<form action="#">
 *			<fieldset>
 *				<legend>File Uploads</legend>
 *				<h3>File Uploads</h3>
 *				<ol>
 *					<li>
 *						<button class="custom-file-upload">Select file</button>
 *						<input type="file">
 *					</li>
 *				</ol>
 *			</fieldset>
 *		</form>
 *
 */
.custom-file-upload {
	.no-js & {
		display: none;
	}
}

input[type="file"] {
	.js & {
		visibility: hidden;
		width: 0px;
	}
}