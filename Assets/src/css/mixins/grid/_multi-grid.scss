/// A shortcut to creating fluid layouts with different numbers of columns at different breakpoints.  All columns are of equal width.
/// @group grid
/// @param {String} $selector - The selector to which the styles for each column will be applied.
/// @param {Number} $smallColumns - The number of columns to be displayed on small resolutions.
/// @param {Number} $mediumColumns - The number of columns to be displayed on medium resolutions.
/// @param {Number} $largeColumns - The number of columns to be displayed on large resolutions.
/// @param {Boolean} $flush [false] - Whether or not the columns should be flush on the outside edge of their container.  This also sets the mult-grid container to act as a nested row.
/// @param {Pixels | Em | Percentage} $padding [$columnPadding] - A padding override to be set on all columns in the multi-grid.
/// @param {String} $smallBreak [small] - The breakpoint at which to apply the number of columns defined by `$smallColumns`.
/// @param {String} $mediumBreak [medium] - The breakpoint at which to apply the number of columns defined by `$mediumColumns`.
/// @param {String} $largeBreak [large] - The breakpoint at which to apply the number of columns defined by `$largeColumns`.
/// @example
/// multi-grid("> li", 1, 2, 3)
/// @example
/// multi-grid("> li", 1, 2, 3, (flush: true, padding: 10px))
@mixin multi-grid($selector, $smallColumns, $mediumColumns, $largeColumns, $options: ()) {
	$options: map-merge((
		flush: false,
		padding: $columnPadding,
		smallBreak: small,
		mediumBreak: medium,
		largeBreak: large
	), $options);

	$flush: map-get($options, flush);
	$padding: map-get($options, padding);
	$smallBreak: map-get($options, smallBreak);
	$mediumBreak: map-get($options, mediumBreak);
	$largeBreak: map-get($options, largeBreak);

	// this is the container
	@if $flush == true {
		@include row((nested: true));
		margin: 0 (-1 * $padding);
	}
	@else {
		@include row();
	}

	#{unquote($selector)} {
		// These styles apply to all shift-columns
		display: inline-block;
		margin-right: -0.25em;
		padding: $padding;
		@content;

		@include media($smallBreak) {
			width: oneColumn((columns: $smallColumns, includeGutterWidth: false));
		}

		@include media($mediumBreak) {
			width: oneColumn((columns: $mediumColumns, includeGutterWidth: false));
		}

		@include media($largeBreak) {
			width: oneColumn((columns: $largeColumns, includeGutterWidth: false));
		}
	}
}