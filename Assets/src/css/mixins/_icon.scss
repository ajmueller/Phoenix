/// Adds and icon as pseudo element content as well as any passed styles
/// @param {String} icon - The name of the icon as defined in its icon map.
/// @param {String} pseudo - The name of the pseduo element you want to target, either 'before' or 'after'.
/// @param {String} iconMap - The name of the icon map to retrieve the icon from. Defaults to $icons.
/// @example
/// icon(arrowUp)
/// // returns "\e601"
/// @example
/// icon(facebook, (iconMap: $socialIcons))
/// // returns :before { content: "\e708" }
/// @example
/// icon(arrowUp, (pseudo: 'after')) { color: red; }
/// // returns :after { content: "\e601"; color: red;}
@mixin icon($name, $options: ()) {
	$options: map-merge((
		pseudo: 'before',
		iconMap: $icons
	), $options);

	&:#{map-get($options, pseudo)} {
		content: icon($name, map-get($options, iconMap));
		@content; // allows additional CSS declarations to be passed
	}
}